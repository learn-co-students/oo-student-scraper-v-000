Monday 12/17

    Hour
      1. Review past lessons
      2. Code Wars
    2 Hours
      WGR
    1 Hour
      1. Go over all of Learn lab for student scraper
      2. Go over Learn lab for send
      3. look up send in both books
      4. Google around for send
      5. code student scraper

      LUNCH
      WALK

    2 Hours 
      finish coding student scraper

    2+ Hours 
      SQL
        1. Review all labs
        2. Check books for SQL
        3. Finish two labs


self.scrape_index_page(index_url) 
finished

def self.scrape_profile_page(profile_url)

1. scrape pages the usual way

XXX STOPPED AFTER ENTERING WHOLE TREE OF NODES; TIME TO RUN TESTS


2. connect to the website from the hash for each student in self.scrape_index_page


    #if link[link.to_sym] = {
    #         :twitter => link.css
    #         :linkedin => link.css
    #         :github => link.css
    #         :blog => link.css
    #       }


            # :profile_quote => site.css("div.social-icon-container div.vitals-text-container div.profile-quote").text,  
            # :bio => site.css("div.social-icon-container div.details-container div.bio-content content-holder div.description-holder p").text

# scrape information from index and instantiate students

# => {:name => "Abby Smith", :location => "Brooklyn, NY", :profile_url => "students/abby-smith.html"}



# <div class="card-text-container">
# <h4 class="student-name">Ryan Johnson</h4>
# <p class="student-location">New York, NY</p>
# </div>

  # kickstarter.css("li.project.grid_4").each do |project|
  #   title = project.css("h2.bbcard_name strong a").text
  #   projects[title.to_sym] = {
  #     :image_link => project.css("div.project-thumbnail a img").attribute("src").value,
  #     :description => project.css("p.bbcard_blurb").text,
  #     :location => project.css("ul.project-meta span.location-name").text,
  #     :percent_funded => project.css("ul.project-stats li.first.funded strong").text.gsub("%","").to_i
  #   }

  

